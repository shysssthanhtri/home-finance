name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
  GOOGLE_ID: ${{ secrets.GOOGLE_ID }}
  GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  CI:
    name: Checking code quality
    runs-on: ubuntu-latest
    environment: Production

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
      
    - name: Set up pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8
      
    - name: Restore cached npm dependencies
      uses: actions/cache/restore@v4
      with:
        path: |
          node_modules
        key: npm-dependencies-${{ hashFiles('pnpm-lock.yaml') }}
      
    - name: Install dependencies
      run: pnpm install --frozen-lockfile --ignore-scripts
      
    - name: Cache pnpm dependencies
      uses: actions/cache/save@v4
      with:
        path: |
          node_modules
        key: npm-dependencies-${{ hashFiles('pnpm-lock.yaml') }}

    - name: Generate code
      run: pnpm db:generate

    - name: Lint
      run: pnpm lint

    - name: Type check
      run: pnpm type-check

    - name: Build
      run: pnpm build

    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
